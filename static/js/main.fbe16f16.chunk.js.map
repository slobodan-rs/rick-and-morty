{"version":3,"sources":["resources/images/logo.png","resources/images/landing-background.png","resources/images/seasons/season-1.png","resources/images/seasons/season-2.png","resources/images/seasons/season-3.png","resources/images/seasons/season-4.png","resources/images/portal.png","resources/images/title.png","components/GlobalStyle.jsx","components/Nav.jsx","components/LandingSection.jsx","components/Seasons.jsx","components/StyledSeason.jsx","components/SeasonOne.jsx","components/SeasonTwo.jsx","components/SeasonThree.jsx","components/SeasonFour.jsx","components/Caracters.jsx","services.js","components/Footer.jsx","components/Form.jsx","components/Title.jsx","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","Nav","styled","nav","login","burger","StyledLink","Link","props","primary","css","FontAwesome","FontAwesomeIcon","StyledLandingSection","section","background","LandingSection","StyledSeasons","portal","StyledBackSide","BackSide","Seasons","history","useHistory","style","width","height","backgroundColor","flipOnHover","src","season1","alt","color","onClick","push","season2","season3","season4","StyledSeason","div","SeasonOne","season","filter","episode","includes","map","padding","key","id","img","name","SeasonTwo","SeasonThree","SeasonFour","StyledCaracters","StyledFlippy","Flippy","StatusSpan","span","Name","p","RightSpan","Pages","Page","button","Caracters","useState","caracters","setCaracters","page","setPage","counter","setCounter","newCounter","setNewCounter","useParams","results","pages","Array","keys","useEffect","axios","get","getAllCaracters","then","res","data","info","caracter","image","status","species","type","origin","location","disabled","splice","handleClick","StyledFooter","footer","Footer","href","icon","faEnvelope","size","StyledLogin","title","StyledForm","form","InputText","input","attrs","InputPassword","InputSubmit","value","Error","h2","SignUp","Form","setLogin","setUser","users","setUsers","userName","setUserName","userPassword","setPassword","error","setError","formType","setFormType","formPar","setFormPar","handleSignUp","e","preventDefault","user","tmp","password","some","setTimeout","post","onSubmit","handleLogin","placeholder","onChange","target","required","StyledTitle","h1","Title","App","setSeason","setBurger","prev","concat","to","logo","faBars","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbe16f16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b3594ee4.png\";","module.exports = __webpack_public_path__ + \"static/media/landing-background.3d0e3808.png\";","module.exports = __webpack_public_path__ + \"static/media/season-1.9073b990.png\";","module.exports = __webpack_public_path__ + \"static/media/season-2.72c98a27.png\";","module.exports = __webpack_public_path__ + \"static/media/season-3.f8d000af.png\";","module.exports = __webpack_public_path__ + \"static/media/season-4.3c62af87.png\";","module.exports = __webpack_public_path__ + \"static/media/portal.5b537363.png\";","module.exports = __webpack_public_path__ + \"static/media/title.1608dfeb.png\";","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        font-size: 62.5%;\n    }\n    body {\n        width : 100vw;\n        height: 100vh;\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n        sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        padding: 0;\n        overflow: hidden;\n        overflow-y: scroll; \n    }\n`\nexport default GlobalStyle\n","import styled, { css } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Nav = styled.nav`\n    display: ${({login}) => login ? 'none' : 'block'};\n    padding: 2rem;\n    font-size: 1.6rem;\n    background-color: #202223;\n\n    @media (max-width: 768px) {\n        height: 3em;\n        height: ${({burger}) => burger ? '10em' : '3em'};\n    }\n`\n\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    color: white;\n    float: right;\n    padding: 1.5rem;\n    border-radius: 1rem;\n    \n    &:hover {\n        color: ${props => props.primary ? '#56A14B' : '#7EBABD'};\n        border: 2px solid ${props => props.primary ? '#56A14B' : '#7EBABD'};\n        \n    }\n\n    @media (max-width: 768px) {\n        display: none;\n\n        ${({burger}) => burger && css`\n            text-align: center;\n            float: none;\n            display: block;\n        `}\n    }\n`\nconst FontAwesome = styled(FontAwesomeIcon)`\n    display:none;\n\n    @media (max-width: 768px) {\n    display: block;\n    padding-top: 10px;\n    float: right;\n    }\n`\n\n\nexport { Nav, StyledLink, FontAwesome }","import React from 'react'\nimport styled from 'styled-components'\n\nimport background from '../resources/images/landing-background.png'\n\nconst LandingSection = () => {\n    return (\n        <StyledLandingSection>\n            <h1>All about your favorite show!</h1>\n        </StyledLandingSection>\n    )\n}\nconst StyledLandingSection = styled.section`\n    width: 100%;\n    height: 863px;\n    font-size: 5rem;\n    text-align: center;\n    padding-top: 2rem;\n    color: #D8E7ED;\n    background-image: url(${background});\n    background-size: 100%;\n    background-repeat: no-repeat;\n    background-color: #202223;\n    background-position: center; \n\n@media (max-width: 768px) {\n    height: 80vh;\n    font-size: 2.4em;\n    background-size: 300%;\n    background-position: center; \n    line-height: 1.6em;\n}\n`\nexport default LandingSection","import React from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\n\nimport season1 from '../resources/images/seasons/season-1.png'\nimport season2 from '../resources/images/seasons/season-2.png'\nimport season3 from '../resources/images/seasons/season-3.png'\nimport season4 from '../resources/images/seasons/season-4.png'\nimport portal from '../resources/images/portal.png'\n\n\n\n\nconst Seasons = () => {\n    const history = useHistory()\n\n\n    return (\n        <StyledSeasons>\n            <Flippy style={{ width: '320px', height: '420px', backgroundColor: '#202223' }} flipOnHover={true}>\n                <FrontSide>\n                    <img src={season1} alt=\"season-1\" />\n                    <p>Season One</p>\n                </FrontSide>\n                <StyledBackSide style={{ backgroundColor: '#E7E8E9', color: '#202223' }} onClick={() => history.push('/seasons/season1')}>\n                    <p>Season One</p>\n                </StyledBackSide>\n            </Flippy>\n            <Flippy style={{ width: '320px', height: '420px', backgroundColor: '#202223' }} flipOnHover={true}>\n                <FrontSide>\n                    <img src={season2} alt=\"season-2\" />\n                    <p>Season Two</p>\n                </FrontSide>\n                <StyledBackSide style={{ backgroundColor: '#E7E8E9', color: '#202223' }} onClick={() => history.push('/seasons/season2')}>\n                    <p>Season Two</p>\n                </StyledBackSide>\n            </Flippy>\n            <Flippy style={{ width: '320px', height: '420px', backgroundColor: '#202223' }} flipOnHover={true}>\n                <FrontSide>\n                    <img src={season3} alt=\"season-3\"  width=\"293px\" height=\"341\"/>\n                    <p>Season Three</p>\n                </FrontSide>\n                <StyledBackSide style={{ backgroundColor: '#E7E8E9', color: '#202223' }} onClick={() => history.push('/seasons/season3')}>\n                    <p>Season Three</p>\n                </StyledBackSide>\n            </Flippy>\n            <Flippy style={{ width: '320px', height: '420px', backgroundColor: '#202223' }} flipOnHover={true}>\n                <FrontSide>\n                    <img src={season4} alt=\"season-4\" width=\"293px\" height=\"341\" />\n                    <p>Season Four</p>\n                </FrontSide>\n                <StyledBackSide style={{ backgroundColor: '#E7E8E9', color: '#202223' }} onClick={() => history.push('/seasons/season4')}>\n                    <p>Season Four</p>\n                </StyledBackSide>\n            </Flippy>\n        </StyledSeasons>\n    )\n}\n\nconst StyledSeasons = styled.section`\n    width: 100%;\n    height: 70vh;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    text-align: center;\n    padding-top: 20rem;\n    font-size: 1.6rem;\n    color: #E7E8E9;\n    background-color: #E7E8E9;\n    background-image: url(${portal});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: 800px;\n\n    @media(max-width: 768px){\n        height: 100%;\n        padding: 20px 5px;\n    }\n`\nconst StyledBackSide = styled(BackSide)`\n    padding-top: 50%;\n    font-size: 3rem;\n`\n\nexport default Seasons","import styled from 'styled-components'\n\nconst StyledSeason = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    text-align: center;\n    font-size: 2rem;\n    padding: 5rem 0;\n    background-color: #E7E8E9;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: 800px;\n`\n\nexport default StyledSeason","import React from 'react'\nimport Flippy, { FrontSide } from 'react-flippy';\n\nconst SeasonOne = ({ season }) => {\n    return (\n        season.filter(episode => episode.episode.includes('S01')).map(episode =>\n            <Flippy style={{ width: '300px', height: '400px', padding: '30px' }} key={episode.id}>\n                <FrontSide episode={episode}>\n                    <>\n                        <img src={episode.img} width=\"200px\" alt={episode.name}/>\n                        <div>{episode.episode}</div>\n                        <div>{episode.name}</div>\n                    </>\n                </FrontSide>\n            </Flippy>)\n    )\n}\n\n\nexport default SeasonOne\n","import React from 'react'\nimport Flippy, { FrontSide } from 'react-flippy';\n\nconst SeasonTwo = ({ season }) => {\n    return (\n        season.filter(episode => episode.episode.includes('S02')).map(episode =>\n            <Flippy style={{ width: '300px', height: '400px', padding: '30px' }} key={episode.id}>\n                <FrontSide episode={episode}>\n                    <>\n                        <img src={episode.img} width=\"200px\" alt={episode.name}/>\n                        <div>{episode.episode}</div>\n                        <div>{episode.name}</div>\n                    </>\n                </FrontSide>\n            </Flippy>)\n    )\n}\n\n\nexport default SeasonTwo","import React from 'react'\nimport Flippy, { FrontSide } from 'react-flippy';\n\nconst SeasonThree = ({ season }) => {\n    return (\n        season.filter(episode => episode.episode.includes('S03')).map(episode =>\n            <Flippy style={{ width: '300px', height: '400px', padding: '30px' }} key={episode.id}>\n                <FrontSide episode={episode}>\n                    <>\n                        <img src={episode.img} width=\"200px\" alt={episode.name}/>\n                        <div>{episode.episode}</div>\n                        <div>{episode.name}</div>\n                    </>\n                </FrontSide>\n            </Flippy>)\n    )\n}\n\n\nexport default SeasonThree\n","import React from 'react'\nimport Flippy, { FrontSide } from 'react-flippy';\n\nconst SeasonFour = ({ season }) => {\n    return (\n        season.filter(episode => episode.episode.includes('S04')).map(episode =>\n            <Flippy style={{ width: '300px', height: '400px', padding: '30px' }} key={episode.id}>\n                <FrontSide episode={episode}>\n                    <>\n                        <img src={episode.img} width=\"200px\" alt={episode.name}/>\n                        <div>{episode.episode}</div>\n                        <div>{episode.name}</div>\n                    </>\n                </FrontSide>\n            </Flippy>)\n    )\n}\n\n\nexport default SeasonFour","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getAllCaracters } from '../services'\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\nimport styled from 'styled-components';\n\nconst Caracters = () => {\n    const [caracters, setCaracters] = useState({})\n    const [page, setPage] = useState(1)\n    const [counter, setCounter] = useState(0)\n    const [newCounter, setNewCounter] = useState(1)\n\n    const { id } = useParams()\n    \n    const history = useHistory()\n    let results = caracters.results\n    let pages = [...Array(counter).keys()]\n    \n\n\n    useEffect(() => {\n        getAllCaracters(page).then(res => {\n            setCaracters(res.data)\n            setCounter(res.data.info.pages)\n        })\n    }, [page])\n\n    const handleClick = (id) => {\n        history.push(`/characters/${id}`)\n        setPage(id)\n    }\n    const handlePagesPlus = () => {\n        setNewCounter(newCounter === counter ? null : newCounter + 6)\n    }\n    const handlePagesMinus = () => {\n        setNewCounter(newCounter === counter ? null : newCounter - 6)\n    }\n    \n    return (\n        <>\n        <StyledCaracters>\n            {results ? results.map(caracter =>\n                <StyledFlippy flipOnHover={true} key={caracter.id}>\n                    <FrontSide>\n                        <div>\n                            <img src={caracter.image} alt={caracter.name} width=\"293px\" />\n                            <h3>{caracter.name}</h3>\n                        </div>\n                    </FrontSide>\n                    <StyledBackSide>\n                        <div>\n                            <Name>{caracter.name}</Name>\n                        </div>\n                        <div>Status: \n                            <StatusSpan color={caracter.status === 'Alive' ? 1 : 0}>{caracter.status}</StatusSpan>\n                        </div>\n                        <p>Species: \n                            <RightSpan>{caracter.species}</RightSpan>\n                        </p>\n                        <p>Type: \n                            <RightSpan>{caracter.type ? caracter.type : '/'}</RightSpan>\n                        </p>\n                        <p>Origin: \n                            <RightSpan>{caracter.origin.name}</RightSpan>\n                        </p>\n                        <p>Location: \n                            <RightSpan>{caracter.location.name}</RightSpan>\n                        </p>\n                    </StyledBackSide>\n                </StyledFlippy>\n            )\n            : null}\n        </StyledCaracters>\n        <Pages>\n            <Page disabled={newCounter === 1} onClick={() =>  handlePagesMinus()}>Prev</Page>\n               {pages.splice(newCounter, 6).map(page => \n            \n                        <Page onClick={ () => handleClick(page)} key={page} backgroundColor={+id === page}>{page}</Page>\n                    )}\n            <Page disabled={newCounter > 30 }onClick={() => handlePagesPlus()}>Next</Page>\n        </Pages>\n        </>\n    )\n}\n\nconst StyledCaracters = styled.section`\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-evenly;\n    font-size: 2rem;\n    padding: 4rem 0;\n    background-color: #E7E8E9;\n`\nconst StyledFlippy = styled(Flippy)`\n\n    width: 340px;\n    height: 400px;\n    color: #202223;\n\n`\nconst StyledBackSide = styled(BackSide)`\n    background-color: #202223;\n    color: #E7E8E9;\n    text-align: left;\n    padding-top: 50px;\n    font-size: 1.6rem; \n`\nconst StatusSpan = styled.span`\n    color: ${props => props.color ? '#56A14B' : '#CE112D'};\n    float: right;\n\n`\nconst Name = styled.p`\n/* -webkit-transform: rotate(-15deg);  */\n    font-size: 4rem;\n    text-align: center;\n    margin-top: 0px;\n`\nconst RightSpan = styled.span`\n    float: right;\n`\n\nconst Pages = styled.section`\n    width: 100%;\n    height: 5rem;\n    background-color: #E7E8E9;\n    text-align: center;\n    font-size: 2rem;\n\n    @media (max-width: 768px) {\n        height: 8rem;\n    }\n   \n`\nconst Page = styled.button`\n    display: inline;\n    margin: 0.5rem;\n    padding: 0.5rem 1rem;\n    border: 2px solid black;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    background-color: ${props => props.backgroundColor ? '#7EBABD' : null};\n\n    &:hover {\n        background-color: #56A14B; \n    }\n    @media (max-width: 768px){\n        padding: 5px;\n    }\n\n`\n\nexport default Caracters","import axios from 'axios'\n\nexport const getAllSeasons = () => {\n    return axios.get('https://rickandmorty-json-server.herokuapp.com/seasons')\n}\nexport const getAllCaracters = (page) => {\n    return axios.get(`https://rickandmortyapi.com/api/character/?page=${page}`)\n}\nexport const getUsers = () => {\n    return axios.get('https://rickandmorty-json-server.herokuapp.com/users')\n}\nexport const postUsers = (user) => {\n    return axios.post('https://rickandmorty-json-server.herokuapp.com/users', user)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\nconst Footer = () => {\n    return (\n        <StyledFooter>\n            <p>Developed By: <span style={{color:\"#E7E8E9\"}}> Slobodan</span></p>\n            <a href=\"mailto:mr.slobodan@hotmail.rs\">\n                <FontAwesomeIcon icon={faEnvelope} size=\"2x\" color=\"#E7E8E9\" />\n            </a>\n            <p>All Rights Belongs To: TM & © 2020 Turner Broadcasting System, Inc. A WarnerMedia Company</p>\n        </StyledFooter>\n    )\n}\nconst StyledFooter = styled.footer`\n    text-align: center;\n    font-size: 1.3rem;\n    height: 12rem;\n    background-color: #303435;\n    padding: 2rem;\n\n    @media(max-width: 768px) {\n        font-size: 1.2em;\n        padding: 10px;\n        height: 100%;\n    }\n`\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport title from '../resources/images/title.png'\nimport { getUsers, postUsers } from '../services'\n\n\nconst Form = ({ setLogin, setUser }) => {\n    const [users, setUsers] = useState([])\n    const [userName, setUserName] = useState('')\n    const [userPassword, setPassword] = useState('')\n    const [error, setError] = useState('')\n\n    // Sign Up / Login\n    const [formType, setFormType] = useState('Login')\n    const [formPar, setFormPar] = useState('Need and account? Join now!')\n    \n    const history = useHistory()\n\n    useEffect(() => {\n        let mounted = true\n        getUsers().then(res => {\n\n            setUsers(res.data)\n        })\n        return () => mounted = false\n    },[userName])\n\n\n    const handleLogin = (e) =>{\n        e.preventDefault() \n        if(users.some(user => user.name.includes(userName) && user.password.includes(userPassword) && userName !== '' && userPassword !== '')){\n            setLogin(false)\n            history.push('/')\n            setUserName('')\n            setPassword('')\n        }\n        else{\n            setError('Error')\n                setFormType('Login')\n            setTimeout(() => setError(''), 2000)\n        }\n    }\n    const handleSignUp = (e) => {\n        e.preventDefault()\n        let tmp = {\n            name: userName,\n            password : userPassword\n        }\n            if(users.some(user =>user.name.includes(userName) && userName !== '' && userPassword !== '')){\n                setError('Error')\n                setFormType('Sign Up')\n                setTimeout(() => setError(''), 2000)\n                setUserName('')\n                setPassword('') \n            }\n            else {\n                postUsers(tmp)\n                setFormType('Login')    \n                setUserName('')\n                setPassword('')\n            }\n    }\n    \n    const handleSwitch = () => {\n        setFormType(formType ==='Sign Up' ? 'Login' : 'Sign Up')\n        setFormPar(formPar === 'Already on R&M? Login' ? 'Need and account? Join now!' : 'Already on R&M? Login')\n    }\n    return (\n        <StyledLogin>\n            <StyledForm onSubmit={(e) => { formType === 'Login' ? handleLogin(e) : handleSignUp(e)}}>\n                <h2>{formType}</h2>\n                <InputText type=\"text\" placeholder=\"User Name\" onChange={(e) => setUserName(e.target.value) } value={userName} required/>\n                <InputPassword type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} value={userPassword} required/>\n                <InputSubmit type=\"submit\" value={formType} />\n                <SignUp onClick={() => handleSwitch()} color={formType}>{formPar}</SignUp>\n                <Error>{error}</Error>\n            </StyledForm>\n        </StyledLogin>\n    )\n}\n\nconst StyledLogin = styled.div`\n    width: 100vw;\n    height: 85vh;\n    text-align: center;\n    background-color: #202223;\n    background-image: url(${title});\n    background-size: 50%;\n    background-repeat: no-repeat;\n    background-color: #202223;\n    background-position: top;\n\n    @media (max-width: 768px){\n        background-size: 70%;\n    }\n`\nconst StyledForm = styled.form`\n    text-align: center;\n    margin-top: 10%;\n    width: 40rem;\n    display: inline-block;\n    font-size: 1.6rem;\n    padding: 5rem;\n    border-radius: 5rem;\n    background-color: rgba(48, 53, 54, 0.58);\n    color: white;\n\n    @media (max-width: 768px) {\n        width: 15em;\n        margin-top: 10em;\n    }\n`\nconst InputText = styled.input.attrs({ type: 'text' })`\n    padding: 1rem;\n    margin-bottom: 1rem;\n    width: 80%;\n`\nconst InputPassword = styled.input.attrs({ type: 'password' })`\n    padding: 1rem;\n    margin-bottom: 2rem;\n    width: 80%;\n`\nconst InputSubmit = styled.input.attrs({ type: 'submit' })`\n    padding: 1rem;\n    margin-bottom: 1rem;\n    width: 85%;\n    border-radius: 10rem;\n    border: none;\n    \n    &:hover {\n        background-color: ${({value}) => value === 'Login' ? '#56A14B' : '#7EBABD'}\n    }\n`\nconst Error = styled.h2`\n    color: red;\n`\nconst SignUp = styled.p`\n    &:hover {\n        text-decoration: underline;\n        color: ${({color}) => color === 'Login' ? '#7EBABD' : '#56A14B'};\n    }\n`\n\nexport default Form","import React from 'react'\nimport styled from 'styled-components'\n\nconst Title = ({title}) => {\n    return (\n        <StyledTitle>{title}</StyledTitle>\n    )\n}\n\nconst StyledTitle = styled.h1`\n    font-size: 5rem;\n    text-align: center;\n    background-color: #E7E8E9;\n    color: #202223;\n    margin: 0;\n    padding: 5rem;\n`\n\nexport default Title","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\n\nimport { getAllSeasons } from './services'\nimport logo from './resources/images/logo.png'\nimport GlobalStyle from './components/GlobalStyle';\nimport { Nav, StyledLink, FontAwesome } from './components/Nav';\nimport LandingSection from './components/LandingSection'\nimport Seasons from './components/Seasons'\nimport StyledSeason from './components/StyledSeason';\nimport SeasonOne from './components/SeasonOne'\nimport SeasonTwo from './components/SeasonTwo'\nimport SeasonThree from './components/SeasonThree'\nimport SeasonFour from './components/SeasonFour'\nimport Caracters from './components/Caracters';\nimport Footer from './components/Footer';\nimport Form from './components/Form';\nimport Title from './components/Title';\n\n\nconst App = () => {\n  const [season, setSeason] = useState([])\n  const [burger, setBurger] = useState(false)\n  const [user, setUser] = useState(false)\n  const [login, setLogin] = useState(true)\n\n\n  useEffect(() => {\n    getAllSeasons().then(res => {\n      setSeason(prev => prev.concat(res.data))\n    })\n  }, [])\n\n  return (\n    <>\n      <GlobalStyle />\n      <Router>\n\n        <header>\n          <Nav onClick={() => burger === false ? setBurger(true) : setBurger(false)} burger={burger} login={login}>\n            <Link to=\"/\"><img src={logo} alt=\"logo\" width=\"50px\" /></Link>\n            <FontAwesome icon={faBars} size=\"2x\" color=\"#E7E8E9\" />\n            <StyledLink to=\"/characters/1\" burger={burger ? 1 : 0}>CHARACTERS</StyledLink>\n            <StyledLink to=\"/seasons\" primary=\"true\" burger={burger ? 1 : 0}>SEASONS</StyledLink>\n          </Nav>\n        </header>\n\n        <main>\n          <article>\n          {user ? <Redirect to=\"/\" /> : <Redirect to =\"/signin\" />}\n            <Switch>\n              <Route exact path=\"/\">\n                <LandingSection />\n              </Route>\n              <Route exact path=\"/seasons\">\n                <Seasons />\n              </Route>\n              <Route exact path=\"/seasons/season1\">\n                <Title title={'Season One'}/>\n                <StyledSeason>\n                  <SeasonOne season={season} />\n                </StyledSeason>\n              </Route>\n              <Route exact path=\"/seasons/season2\">\n                <Title title={'Season Two'}/>\n                <StyledSeason>\n                  <SeasonTwo season={season} />\n                </StyledSeason>\n              </Route>\n              <Route exact path=\"/seasons/season3\">\n                <Title title={'Season Three'}/>\n                <StyledSeason>\n                  <SeasonThree season={season} />\n                </StyledSeason>\n              </Route>\n              <Route exact path=\"/seasons/season4\">\n                <Title title={'Season Four'}/>\n                <StyledSeason>\n                  <SeasonFour season={season} />\n                </StyledSeason>\n              </Route>\n              <Route path=\"/characters/:id\">\n                <Title title={'Caracters'}/>\n                <Caracters />\n              </Route>\n              <Route path=\"/signin\">\n                <Form setLogin={setLogin}  setUser={setUser}/>\n              </Route>\n            </Switch>\n          </article>\n        </main>\n          <Footer />\n      </Router>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}